version: '3.7'
services:
  node-app:
    container_name: 'hal-log-node-app-#{TAG_NAME}#-build-#{BUILD_NAME}#'
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8086:80"
    volumes:
      - ./node-app:/usr/src/app
    command: [ "tail", "-f", "/dev/null"]
    environment:
      NODE_ENV: "development"
      ELASTICSEARCH_HOST: "http://hal-log-elasticsearch-#{TAG_NAME}#-build-#{BUILD_NAME}#:9200"
      MYSQL_HOST: "hal-log-mysql-#{TAG_NAME}#-build-#{BUILD_NAME}#"
      MYSQL_USERNAME: "root"
      MYSQL_PASSWORD: "admin"
      MYSQL_SCHEMA: "hal-logs"
  web:
    container_name: 'hal-log-node-web-#{TAG_NAME}#-build-#{BUILD_NAME}#'
    image: 'nginx:latest'
    ports:
      - "9090:80"
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf

  mysql:
    container_name: 'hal-log-mysql-#{TAG_NAME}#-build-#{BUILD_NAME}#'
    build:
      context: .
      dockerfile: mysql/Dockerfile
    ports:
      - "8000:3306"
    environment:
      MYSQL_ROOT_PASSWORD: 'admin'
      MYSQL_USER: 'admin'
      MYSQL_PASSWORD: 'test'
      MYSQL_DATABASE: 'hal-logs'

  elasticsearch:
    container_name: 'hal-log-elasticsearch-#{TAG_NAME}#-build-#{BUILD_NAME}#'
    image: 'docker.elastic.co/elasticsearch/elasticsearch:7.7.1'
    ports:
      - "9202:9200"
      - "9302:9300"
    volumes:
      - ./elasticsearch/config/elasticsearch.yml:/etc/elasticsearch/elasticsearch.yml
    depends_on:
      - mysql
    environment:
#      - 'cluster.name=docker-cluster'
#      - 'bootstrap.memory_lock=true'
      - 'discovery.type=single-node'
#      - 'xpack.security.enabled=false'
#      - 'ES_JAVA_OPTS=-Xms512m -Xmx512m'
    ulimits:
      memlock:
        soft: -1
        hard: -1
networks:
  default:
    external:
      name: halv2_log-default-#{TAG_NAME}#-build-#{BUILD_NAME}#